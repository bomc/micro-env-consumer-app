import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	
	// see https://github.com/spasam/spring-boot-build-info
	id 'com.pasam.gradle.buildinfo' version '0.1.3'
	
	id 'com.google.cloud.tools.jib' version '3.0.0'
	id 'com.palantir.git-version' version '0.12.3'
}

group = 'de.bomc.poc'

// Handled by plugin com.palantir.git-version
version = gitVersion()

sourceCompatibility = JavaVersion.toVersion('8')
targetCompatibility = JavaVersion.toVersion('8')
//sourceCompatibility = JavaVersion.VERSION_11
//targetCompatibility = JavaVersion.VERSION_11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2020.0.0-SNAPSHOT")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	//implementation 'org.springframework.retry:spring-retry:1.3.0'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.4.8'
	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.4.8'
	
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6"

	compileOnly 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.assertj:assertj-core:3.11.1'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.0')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.7.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.0')
	
	testImplementation 'com.squareup.okhttp3:mockwebserver:3.8.0'
	testImplementation 'org.hamcrest:hamcrest-library:2.1'
	testImplementation 'com.jayway.jsonpath:json-path-assert:2.5.0'
	testImplementation 'commons-io:commons-io:2.6'
	
	testCompileOnly 'org.projectlombok:lombok'
	
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks {
    build {
        dependsOn(tasks.jibDockerBuild)
    }
}

processResources {
    filter(ReplaceTokens, tokens:[appVersion: gitVersion()])
}

task showVersion {
    doLast {
        println "\nCurrent version: ${gitVersion()}\n"
        def details = versionDetails()
        println "last tag          : ${details.lastTag}"
        println "commit distance   : ${details.commitDistance}"
        println "hash              : ${details.gitHash}"
        println "branch name       : ${details.branchName}"
        println "is clean tag      : ${details.isCleanTag}"
    }
}

jib {
    from {
    	// Base image
        //image = 'adoptopenjdk/openjdk11:jre-11.0.6_10-alpine'
        //image = 'openjdk:11.0.5-slim'
        image = 'adoptopenjdk/openjdk8:jdk8u202-b08-alpine-slim'
    }
    to {
    	// Publishing our app to the repository
        image = 'localhost:5000/bomc/' + project.name + ':' + project.version
        //credHelper = 'secretservice'
        // The image is tagged with latest and the current project.version
        //tags = ['latest', project.version]
        tags = [project.version]
    }
    container {
    	// Add labels
    	labels = [maintainer: 'bomc', name: project.name, group: project.group]
    	// Will be deployed to /simpleApp folder.
        //appRoot = '/simpleApp'
        // Add environment
        environment = [IMAGE_VERSION: project.version]
        // The application will be limited to 360mb of memory
        jvmFlags = ['-Xms360m', '-Xmx360m']
        // The container has port 8080 exposed
        ports = ['8081']

        //workingDirectory = '/simpleApp'
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
    allowInsecureRegistries = false
}

tasks.jibDockerBuild.dependsOn showVersion
defaultTasks 'jib'